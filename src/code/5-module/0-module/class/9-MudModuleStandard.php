<?php


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 2024-02-08 jj5 - class definition...
//

// 2024-02-09 jj5 - NOTE: this class is the place to define anything which needs to be available everywhere from the
// beginning. This code is the most heavily depended on code in the system.

class MudModuleStandard extends MudModule {


  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // 2024-02-09 jj5 - constructor...
  //

  public function __construct( MudModuleStandard|null $previous = null ) {

    parent::__construct( $previous );

  }


  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // 2024-02-09 jj5 - destructor...
  //

  public function __destruct() {

    if ( mud_is_dev() ) {

      assert( ! mud_is_beta() );
      assert( ! mud_is_prod() );

      $this->save_constants();

    }
    elseif ( mud_is_beta() ) {

      assert( ! mud_is_dev() );
      assert( ! mud_is_prod() );

    }
    elseif ( mud_is_prod() ) {

      assert( ! mud_is_dev() );
      assert( ! mud_is_beta() );

    }
    else {

      assert( false, "system should be one of 'DEV', 'BETA', or 'PROD'." );

    }
  }


  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // 2024-02-08 jj5 - public methods...
  //

  // 2024-02-08 jj5 - NOTE: we don't cache the result of the following functions because constant definitions can change
  // state (from undefined to defined) over the course of a running program...

  // 2024-02-09 jj5 - NOTE: the DEBUG flag is usually only set on DEV systems but it can be set in BETA or PROD if you need
  // to collect more information about the running system.

  public function is_debug() : bool { return defined( 'DEBUG' ) && DEBUG; }

  // 2024-02-09 jj5 - NOTE: code goes from DEV -> BETA -> PROD; it's okay to run code generation in DEV but not in BETA or
  // PROD.

  public function is_dev() : bool { return defined( 'DEV' ) && DEV; }

  public function is_beta() : bool { return defined( 'BETA' ) && BETA; }

  public function is_prod() : bool { return ! ( mud_is_dev() || mud_is_beta() ); }


  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // 2024-02-09 jj5 - protected methods...
  //

  protected function save_constants() {

    $skip_list = [

      function( $name ) { return ! preg_match( '/^MUD_/', $name ); },

      function( $name ) { return preg_match( '/^MUD_ERR_EXAMPLE_\d+/', $name ); },

    ];

    $path = __DIR__ . "/../../../../gen/constant/mudball.php";

    $map = [];

    if ( file_exists( $path ) ) {

      $lines = file( $path );

      for ( $i = 0; $i < count( $lines ); $i++ ) {

        $line = trim( $lines[ $i ] );

        if ( ! preg_match( "/define\( '([^']*)'/", $line, $matches ) ) { continue; }

        $name = $matches[ 1 ];

        $map[ $name ] = $line;

      }
    }

    foreach ( get_defined_constants( false ) as $name => $value ) {

      foreach ( $skip_list as $skip ) { if ( $skip( $name ) ) { continue 2; } }

      $json = json_encode( $value, JSON_UNESCAPED_SLASHES );

      if ( $json && ( $json[ 0 ] === '{' || $json[ 0 ] === '[' ) ) {

        $json = "'**COMPLEX**'";

      }

      $line = "define( '$name', $json );";

      $map[ $name ] = $line;

    }

    $result = [
      '<?php',
      '// 2024-02-09 jj5 - this code is generated by ' . get_class( $this ),
      ...array_values( $map ),
      '',
    ];

    file_put_contents( $path, implode( "\n", $result ) );


  }
}
