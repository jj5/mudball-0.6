<?php

class MudDalTraitsGeneratorLookup extends MudDalTraitsGeneratorStandard {

  public function print_traits( $table, &$traits_list ) {

    $name = $table->get_name();

    $traits_name = 'MudDal_' . $name;

    $traits_list[] = $traits_name;

?>
trait <?= $traits_name ?> {
<?php

    $tab_const = strtoupper( $table->get_name() );

    $key = null;
    $char_col = null;
    $code_col = null;

    foreach ( $table->col_map as $col_name => $col ) :

      if ( $key === null ) { $key = $col; continue; }

      if ( preg_match( '/_char$/', $col_name ) ) { $char_col = $col; }
      if ( preg_match( '/_code$/', $col_name ) ) { $code_col = $col; }

      $db_type = $key->get_db_datatype();
      $arg = $key->get_prop();
      $col_const = strtoupper( $col->get_name() );
      $key_const = strtoupper( $key->get_name() );

?>

  public function get_<?= $col->get_name() ?>( <?= $db_type ?> $<?= $arg ?> ) {

    // generated by <?= $this->get_generated_by( __FILE__, __LINE__ ) ?>

    return $this->get_field_cached(
      <?= $tab_const ?>,
      <?= $col_const ?>,
      [ <?= $key_const ?> => $<?= $arg ?> ]
    );

  }
<?php

    endforeach;

    $key_const = strtoupper( $key->get_name() );

    if ( $char_col && $code_col ) {

      $char_const = strtoupper( $char_col->get_name() );
      $code_const = strtoupper( $code_col->get_name() );

?>

  public function get_<?= $key->get_name() ?>( string $char_or_code ) {

    // generated by <?= $this->get_generated_by( __FILE__, __LINE__ ) ?>

    return $this->get_lookup_enum(
      <?= $tab_const ?>,
      <?= $key_const ?>,
      [ <?= $char_const ?>, <?= $code_const ?> ],
      $char_or_code
    );

  }

<?php

    }
    elseif ( $code_col ) {

      $code_const = strtoupper( $code_col->get_name() );

?>

  public function get_<?= $key->get_name() ?>( string $code ) {

    // generated by <?= $this->get_generated_by( __FILE__, __LINE__ ) ?>

    return $this->get_lookup_enum(
      <?= $tab_const ?>,
      <?= $key_const ?>,
      [ <?= $code_const ?> ],
      $code
    );

  }

<?php

    }
    else {

      // 2021-03-29 jj5 - this can happen... oh well.

    }

    foreach ( $table->idx_map as $idx_name => $idx ) :

      $col_list = [];
      $col_prop_list = [];

      foreach ( $idx->col_map as $col ) {

        $col_list[] = $col;
        $col_prop_list[] = $col->get_prop();

      }

      foreach ( $table->col_map as $col_name => $col ) :

        if ( in_array( $col, $col_list ) ) { continue; }

        if ( count( $col_prop_list ) === 0 ) { continue; }

        $arg_list = [];
        $arr_list = [];

        foreach ( $idx->col_map as $idx_col ) {

          /*
          $arg_list[] = [
            'type' => $idx_col->get_db_datatype(),
            'name' => $idx_col->get_prop(),
          ];
          */

          $arg_list[] = $idx_col->get_db_datatype() . ' $' . $idx_col->get_prop();

          $arr_list[] = strtoupper( $idx_col->get_name() ) . ' => $' . $idx_col->get_prop();

        }

        $tab_const = strtoupper( $table->get_name() );
        $col_const = strtoupper( $col->get_name() );
        $key_const = strtoupper( $key->get_name() );

        $function_name = 'get_' . $col->get_name() . '_by_' . ( implode( '_and_', $col_prop_list ) );

        $args = implode( ', ', $arg_list );


?>

  public function <?= $function_name ?>( <?= $args ?> ) {

    // generated by <?= $this->get_generated_by( __FILE__, __LINE__ ) ?>

    return $this->get_field(
      <?= $tab_const ?>,
      <?= $col_const ?>,
      [ <?= implode( ', ', $arr_list ) ?> ]
    );

  }
<?php

      endforeach;

    endforeach;

?>
}
<?php

  }
}
